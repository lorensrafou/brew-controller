// <auto-generated />
using CoreBrewServer.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoreBrewServer.Migrations
{
    [DbContext(typeof(BrewingContext))]
    [Migration("20190717015648_initialize-models")]
    partial class initializemodels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("CoreBrewServer.Models.BrewDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BrewScheduleId");

                    b.Property<string>("ComnpletedBoil");

                    b.Property<string>("CompletedMash");

                    b.Property<string>("Name");

                    b.Property<string>("ReachedBoil");

                    b.Property<string>("ReachedMashTemp");

                    b.Property<string>("StartTime");

                    b.HasKey("Id");

                    b.HasIndex("BrewScheduleId");

                    b.ToTable("BrewDays");
                });

            modelBuilder.Entity("CoreBrewServer.Models.BrewSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BoilDuration");

                    b.Property<int>("MashDuration");

                    b.Property<float>("MashTemperature");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("BrewSchedules");
                });

            modelBuilder.Entity("CoreBrewServer.Models.MashTemperature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BrewDayId");

                    b.Property<float>("Temperature");

                    b.Property<string>("Timestamp");

                    b.HasKey("Id");

                    b.HasIndex("BrewDayId");

                    b.ToTable("MashTemperatures");
                });

            modelBuilder.Entity("CoreBrewServer.Models.BrewDay", b =>
                {
                    b.HasOne("CoreBrewServer.Models.BrewSchedule", "BrewSchedule")
                        .WithMany("BrewDays")
                        .HasForeignKey("BrewScheduleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CoreBrewServer.Models.MashTemperature", b =>
                {
                    b.HasOne("CoreBrewServer.Models.BrewDay", "BrewDay")
                        .WithMany("MashTemperatures")
                        .HasForeignKey("BrewDayId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
